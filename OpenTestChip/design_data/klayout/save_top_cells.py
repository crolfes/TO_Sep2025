# KLayout Python Script (save_top_cells.py)
# Run inside KLayout: File -> Scripts -> Run...
# Or from command line:
#   klayout -b -r save_top_cells.py -rd input=myfile.gds -rd outdir=./cells

import pya
import os
import csv

# Get runtime parameters (can be passed with -rd)
input_file = "T558_base_scanner.gds" # pya.Application.instance().argv().get("input", "basic.gds")
output_dir = "./cells" #  pya.Application.instance().argv().get("outdir", "./cells")

# Ensure output directory exists
if not os.path.exists(output_dir):
    os.makedirs(output_dir)

# Load the layout
layout = pya.Layout()
layout.read(input_file)

max_area = 0.0
max_cell_name = None
areas = []  # collect results for CSV

# Iterate only top-level cells
for cell in layout.each_cell():
    if not cell.is_top():
        continue  # skip subcells

    cell_name = cell.name

    # Create a new layout for each top-level cell
    sub_layout = pya.Layout()
    sub_layout.dbu = layout.dbu

    # Copy this cell (with hierarchy) to new layout
    new_cell = sub_layout.create_cell(cell_name)
    new_cell.copy_tree(cell)

    # Save as GDS
    out_path = os.path.join(output_dir, f"{cell_name}.gds")
    sub_layout.write(out_path)

    # Compute bounding box area
    bbox = cell.bbox()
    if not bbox.empty():
        # Convert from dbu² to real units² (µm² if dbu = 1 nm)
        area = (bbox.width() * layout.dbu) * (bbox.height() * layout.dbu)
    else:
        area = 0.0

    areas.append((cell_name, area))
    print(f"Saved {cell_name} -> {out_path}, area = {area:.3f}")

    # Track maximum area
    if area > max_area:
        max_area = area
        max_cell_name = cell_name

# Save all areas to CSV
csv_path = os.path.join(output_dir, "top_cell_areas.csv")
with open(csv_path, "w", newline="") as csvfile:
    writer = csv.writer(csvfile)
    writer.writerow(["CellName", "Area_um2"])
    for cell_name, area in areas:
        writer.writerow([cell_name, f"{area:.6f}"])

print("\n======================")
print(f"Largest top-level cell: {max_cell_name} with area {max_area:.3f} µm²")
print(f"Areas saved to: {csv_path}")
print("======================")
