import klayout.db as db

# Path to your GDS file
gds_file = "S350B_01_DE.gds"

# Load the layout
layout = db.Layout()
layout.read(gds_file)

# Dictionary to store layer info
active_layers = {}

# Get the top cell of the layout (assuming there's a single top cell or you want to process all)
# You might want to iterate through all top cells if your GDS has multiple.
# For simplicity, let's assume we are interested in the whole layout.
top_cell = layout.top_cell()

if top_cell:
    # Iterate over all defined layers in the layout's layer properties
    for layer_index in layout.layer_indexes():
        # Get the LayerInfo object for the current layer index
        layer_info = layout.get_info(layer_index)


        # Get all defined layer indices from the layout (not necessarily active yet)
        all_defined_layer_indexes = layout.layer_indexes()

        # Iterate through the top cell and check for shapes on each defined layer
        if top_cell:
            for layer_index in all_defined_layer_indexes:
                # Get the shapes on this specific layer within the top cell's hierarchy
                # The 'shapes()' method returns a 'Shapes' object, which is iterable if there are shapes.
                # If there are no shapes, it will be empty.
                shapes_on_layer = top_cell.shapes(layer_index)

                # Check if there are any shapes on this layer
                if shapes_on_layer.size() > 0:
                    layer_info = layout.get_info(layer_index)
                    active_layers[layer_index] = layer_info

# Print active layers
print("Active layers in GDS file:")
for index, info in active_layers.items():
    print(f"Layer index: {index}, Layer info: Layer={info.layer}, Datatype={info.datatype}")
